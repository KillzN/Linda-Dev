let handler = async (m, { conn, text, isROwner, isOwner }) => {

    // Si el usuario proporciona el mensaje de despedida
    if (text) {
        // Validar que el mensaje tenga una longitud m√≠nima para evitar mensajes muy cortos
        if (text.length < 10) {
            return conn.reply(m.chat, 'üìè *Tu mensaje de despedida es muy corto. Agrega m√°s info o usa el @ para personalizar.*', m);
        }

        // Reemplazar los placeholders con ejemplos de usuarios
        let preview = text
            .replace(/@user/gi, '@' + m.sender.split('@')[0]);

        // Guardar el mensaje y dar feedback
        global.db.data.chats[m.chat].sBye = text;
        conn.reply(m.chat, `‚úÖ *Despedida configurada con √©xito*\n\nüìù _Este ser√° el mensaje cuando alguien salga del grupo._\n\nüîß Usa *@user* para personalizar.\n\nüí¨ *Vista previa:*\n${preview}`, m);

    } else {
        // Mensaje inicial de ayuda si no se proporciona un mensaje
        conn.reply(m.chat, `üëã *_ESCRIBE EL MENSAJE DE DESPEDIDA_*\n\nüõ†Ô∏è *_OPCIONAL:_* Usa estos comandos con "@" para personalizar:\n\nüìå *@user* ‚Äî Menciona al usuario que sali√≥\n\n‚ú® *EJEMPLO:* _Adi√≥s @user, te extra√±aremos._\n\nüé® ¬°Hazlo a tu estilo!`, m);
    }
};

handler.help = ['setbye @user + texto'];
handler.tags = ['group'];
handler.command = ['setbye', 'despedida'];
handler.botAdmin = true;
handler.admin = true;
handler.group = true;

export default handler;
